====== Ubuntu Server 10.10 ======

==== мышка ====

<code bash>sudo apt-get install gpm</code>

===== телефон =====

Asterisk настройка для дома Роутер на Ubuntu Server (lucid).
<code bash>
# aptitude install asterisk
</code>

<code>
router*CLI> core show version
Asterisk 1.6.2.5-0ubuntu1 built by buildd @ palmer on a i686 running Linux on 2010-04-16 01:24:06 UTC
</code>
 
  - регистрируем мультифон http://habrahabr.ru/blogs/telecom/66023/
    * номер мегафона: +79262770000, пароль на мегафоне: megapass
    * включаем одновременный звонок на ПК и на мобилу
      * https://sm.megafon.ru/sm/client/routing/set?login=79262770000@multifon.ru&password=megapass&routing=2
      * http://multifon.ru/publications/settings_sip/index.html
  - регистрируем betamax и кладем 10 евро через пэйпал - включится бесплатная москва на 90 дней (300 минут в неделю), http://backsla.sh/betamax - тут выбираем клона с лучшими тарифами
    * логин - beta
    * пароль - betapass
    * через их воип клиент подтверждаем номер мобильника, чтобы его можно было поставить на callerid, у меня почему то сразу был он подтвержден
 
Конфиги:

sip.conf

<code>
[general]
tcpenable=yes
; /multifon в конце - это extension на который будут приходить входящие вызовы для номера 79262770000
; их мы перенаправим в диалплане на локальный номер 6000
register => tcp://79262770000multifon.ru:megapass:79260000@sbc.multifon.ru/multifon~60
register => udp://+79262770000@sip.voipcheap.com:betapass:beta@sip.voipcheap.com/betamax

; это мой локальный номер
[6000]
type = friend
host = dynamic
secret = sOmePasWrd
nat = yes
 
[multifon]
dtmfmode = inband
context = default
username = 79262770000
nat = never
; с таким типом и исходящие и входящие
type = friend
secret = megapass
insecure = invite,port
canreinvite = no
fromuser = 79262770000
fromdomain = multifon.ru
host = sbc.multifon.ru
port = 5060
disallow = all
;allow = g729
allow = ulaw
allow = alaw
transport = tcp
qualify = no
 
[betamax]
dtmfmode = inband
context = default
username = beta
nat = never
; с таким типом только исходящие
type = peer
secret = betapass
insecure = invite,port
canreinvite = no
fromuser = +79262770000
fromdomain = sip.voipcheap.com
host = sip.voipcheap.com
port = 5060
disallow = all
allow = g729
allow = ulaw
allow = alaw
transport = udp
qualify = no
</code>
 
extensions.conf
<code>
[general]
; чтобы клал трубку при отбое у вызываемого абонента
; и вообще если непонятно что с звонком
autofallthrough = yes
 
[default]
; мегафон через мультифон
exten => _+792.,1,Dial(SIP/multifon/${EXTEN}!${EXTEN:1}@multifon.ru,,r)
exten => _792.,1,Dial(SIP/multifon/${EXTEN}!${EXTEN}@multifon.ru,,r)
exten => _+793[0123].,1,Dial(SIP/multifon/${EXTEN}!${EXTEN:1}@multifon.ru,,r)
exten => _793[0123].,1,Dial(SIP/multifon/${EXTEN}!${EXTEN}@multifon.ru,,r)
 
; остальное через бетамакс
exten => _+7.,1,Dial(SIP/betamax/00${EXTEN:1},,r)
exten => _7.,1,Dial(SIP/betamax/00${EXTEN},,r)
; 00номер - через бетамакс
exten => _00.,1,Dial(SIP/betamax/${EXTEN},,r)
 
; принимать звонки для абонента 6000
exten => _6000,1,Dial(SIP/6000,,r)
 
; звонки на 79262770000 отправлять абоненту 6000
exten => multifon,1,Dial(SIP/6000,,r)
Edit this page (if you have permission)–Published by Google Docs–Report Abuse–Updated automatically every 5 minutes
</code>

===== RAID6 =====

Почему RAID-6? Как известно, RAID-5 выдерживает смерть одного веника, и после этой самой смерти – до момента когда закончится восстановление рейда с новым винчестером ваши данные под угрозой – восстановление обычно занимало до 70 часов для больших массивов и еще один веник может легко умереть в это время. 

RAID-6 выдерживает смерть 2-х любых веников. Из минусов – общепризнанное мнение что тормозит, особенно запись, даже по сравнению с RAID-5. Что-ж, проверим.

<code bash>
# mdadm --monitor -1 -m myname@myisp.com /dev/md0 -t
</code>

==== bitmap ====

Linux-овый софтрейд поддерживает замечательную фичу: bitmap. Там отмечаются измененные блоки на диске, и если у вас почему-то отвалился один диск из массива, а потом вы его обратно добавили – полная перестройка массива не нужна. Чертовски полезно. Хранить можно на самом рейде – internal, а можно в отдельном файле – но тут есть ограничения (на тип ФС например). Я сделал internal bitmap. И зря. Internal bitmap тормозит безбожно т.к. постоянно дергается головка веников при записи.

Посмотрим на скорость:

Скорость можно тестировать например так:

<code bash>
# time sh -c «dd if=/dev/zero of=ddfile bs=1M count=5000»
# time sh -c «dd if=ddfile of=/dev/null bs=1M count=5000»
</code>

Результаты для моего RAID-6 из 5xWD 1Тб получились следующие: чтение 268МБ/сек, запись 37МБ/сек. Все разводят руками и говорят: ну а чего же вы хотели? RAID-6 тормозит при записи, ведь ему надо прочитать то что было записано раньше, чтобы посчитать обновленные контрольные суммы для всех дисков. А еще и этот bitmap…
Скорость перестройки массива – около 25МБ/сек – полная перестройка массива до 15 часов. Вот он, ваш ночной кошмар.

==== Решение ====

У драйвера рейда в Linux есть такой полезный параметр: stripe_cache_size значение по умолчанию которого равно 256. Слишком низкое значение – резко снижает скорость записи (как оказалось). Оптимальное значение для многих – 8192. Это — кол-во блоков памяти на 1 диск. 1 блок это обычно 4kb (зависит от платформы), для 5-и дискового массива кеш займет 8192*4кб*5 = 160МБ.

<code bash>
# echo 8192 > /sys/block/md0/md/stripe_cache_size
</code>

Действовать начинает моментально. Теперь в большинстве случаев драйверу не приходится читать диск перед записью (особенно при линейной записи), и производительность резко вырастает. После перезагрузки пропадает, чтобы не пропало — добавляем в какой-нибуть /etc/rc.local например.

Скорость перестройки массива теперь – 66МБ/сек (это сразу по всем дискам, около 5 часов на весь массив), скорость чтения осталась той-же, а вот скорость записи – выросла до 130МБ/сек (с 37).

==== Перенос битмапа ====

Переносим bitmap на отдельный диск (в моём случае — системный). Если системный веник сдохнет — ничего страшного, массив восстановится и без bitmap-а.

Головка больше не дергается при записи лишний раз, и скорость записи вырастает до 165МБ/сек.
<code bash>
# mdadm -G /dev/md0 -b /var/md0_intent
</code>

Итак, за 10 секунд мы подняли скорость записи с удручающих 37 МБ/сек до вполне приличных 165 МБ/сек (более чем в 4 раза!!). Теперь через Samba по сети файлы и пишутся и читаются 95-100 МБ/сек, и планировавшийся из-за низкой скорости рейда апгрейд сервера придется отложить на неопределенное время – производительности дохленького Opteron 165 теперь с лихвой хватает для всех поставленных задач.

===== Общая папка =====

Случилось мне настраивать на работе роутер WL500G в качестве шлюза интернета и Samba сервера. На наши тридцать-сорок машин в офисе компании, он со своей задачей справляется весьма хорошо. На сервере Samba расшарены несколько папок с различными функциями.

Папка ОБМЕН – для обмена пользователями текущими документами (не через электронку же их отправлять). На локальных машинах расшаренных папок нет, чтобы не давать пользователям вирусам возможности гадить в сети. Эта папка периодически очищается от всех файлов, чтобы не собирать мусор.

Папка АРХИВ – в этой папке складывются все файлы, которые требуют длительного хранения. Периодически делается архив этой папки на другой компьютер. В папке создано несколько вложенных каталогов для разных отделов.

Также есть папка КОНСТРУКТОР – ну, тут наши мозголомы хранят свои чертежи и всякие другие умные вещи. Доступ к этой папке ограничен по конкретным IP. Нечего там делать менеджерам и бухгалтерам.

На 90% машин в конторе я установил Ubuntu, на оставшихся стоит лицензионный Windows. Лучше себя обезопасить от применения нелицензионного софта, дабы не было потом проблем при проверке соответствующими органами. Пользователи подключаются терминально к серверу 1С.

После перевода большинства машин на Ubuntu, проблема вирусов уменьшилась в разы, однако полностью побороть ее пока не получается. Оставшиеся «счастливчики» нет-нет, да затащат что-нибудь на свои компы. Отказаться полностью от применения Windows Не представляется возможным из-за необходимости установки различных бухгалтерских программ. Ведь те, кто пишут программы даже не подозревают о том, что кроме Windows есть и другие операционные системы.

Это такое лирическое вступление. А теперь к сути. При заражении виндовых машин в папках Самбы периодически прописывалась разная зараза, а пользователи норовили обмениваться музыкой и фильмами, а нам нужны проблемы с лицензированием? Правильно, нет. Пришлось браться за справочники по Самбе и читать-читать-читать… Все оказалось до безумия просто. Оказывается у Самбы есть такой замечательный параметр, как veto files. Данный параметр указывает какие файлы запрещается сохранять в папке Самбы. Сам конфиг Самбы получился такой:

<code bash>
[global]
dos charset = UTF-8
display charset = UTF-8
workgroup = OFFICE
netbios aliases = ROUTER1
server string = Internet Server
interfaces = 192.168.2.1/24
security = SHARE
log level = 1
max log size = 100
max xmit = 64000
time server = Yes
dns proxy = No
wins support = Yes
guest ok = Yes
delete veto files = Yes
veto files = /autorun*.*/*.lnk/*.exe/*.mp3/*.com/*.bat/*.msi/Thumbs.db/*.ini/*.inf/*.rdp/*.bak/*.dll/*.tmp/

[ОБМЕН]
comment = Папка для обмена текущими документами
path = /tmp/harddisk/obmen
force user = root
read only = No
vfs objects = extd_audit, recycle

[АРХИВ]
comment = Папка для архивирования документов
path = /tmp/harddisk/archiv
force user = root
read only = No
vfs objects = extd_audit, recycle

[КОНСТРУКТОР]
comment = Документы конструкторского отдела
path = /tmp/harddisk/constructor
force user = root
read only = No
hosts allow = 192.168.2.125, 192.168.2.250
vfs objects = extd_audit, recycle

veto files = /autorun*.*/*.lnk/*.exe/*.mp3/… - Запрет на сохранение файлов конкретных типов

delete veto files = Yes – удалять сразу файлы конкретного типа

vfs objects = extd_audit, recycle – создать корзину для удаляемых файлов разрешенных типов

hosts allow = 192.168.2.125, 192.168.2.20 – список IP компьютеров, которым разрешен доступ к папке

</code>

Прописав в параметре veto files все запрещенные файлы, вы сильно упростите свою жизнь. Например многие вирусы создают свои копии с расширением .tmp или .lnk. А так вы им не дадите такой возможности. В том числе, вы не позволите пользователям работать с архивными файлами напрямую в папке АРХИВ. Моя бухгалтерия сильно меня напрягала тем, что они привыкли работать с архивными документами прямо на сервере. А у MS WORD есть интересная особенность – при работе с файлом, он создает временный файл с расширением .tmp. А тут получается, что если бухгалтеру нужно поработать с документом, он должен его скопировать к себе на компьютер, открыть, поработать и сохранить его в правильном месте. И архивирующей программе он (бухгалтер) при этом не мешает делать архив документов, если пришло время. Пользователи теперь конечно очень не довольны, что не могут втихаря сохранять свою музыку на сервере, да разве мы должны подстраиваться под прихоти таких пользователей?
